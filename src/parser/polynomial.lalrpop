use std::str::FromStr;
use super::{Term, Polynomial};

grammar;

pub Polynomial: Polynomial = {
    <t:Term> <v:("+" <Term>)*> => {
        let mut v = v;
        v.insert(0, t);

        Polynomial::new(v)
    }
}

Term: Term = {
    <Number?> <("x" ("^" <Number>)?)?> => {
        let (coef, exp) = (<>);

        let coef = coef.unwrap_or(1);
        let exp = match exp {
            None => 0,
            Some((_, exp)) => match exp {
                None => 1,
                Some(exp) => exp,
            }
        };

        Term::new(coef, exp)
    }
}

Number: i32 = {
    <r"[0-9]+"> => i32::from_str(<>).unwrap(),
}
